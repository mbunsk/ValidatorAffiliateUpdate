export interface PitchDeckData {
  validationData: {
    idea: string;
    targetCustomer: string;
    problemSolved: string;
    feedback: string;
  };
  customerInsights: Array<{
    persona: {
      name: string;
      role: string;
      background: string;
      painPoints: string[];
      priceWillingness: string;
    };
    conversations?: Array<{
      question: string;
      response: string;
    }>;
  }>;
  simulationData: Array<{
    month: number;
    title: string;
    challenges: string[];
    wins: string[];
    users: number;
    keyDecisions: string[];
  }>;
  landingPageContent?: string;
}

export class SimplePdfGenerator {
  private parseFeedbackScore(feedback: string): number {
    const scoreMatch = feedback.match(/(\d+)\/100/);
    return scoreMatch ? parseInt(scoreMatch[1]) : 75;
  }

  private extractFeedbackSection(feedback: string, sectionTitle: string): string[] {
    const regex = new RegExp(`<h3>${sectionTitle}</h3>[\\s\\S]*?(?=<h3>|$)`, 'i');
    const match = feedback.match(regex);
    if (!match) return [];
    
    // Extract text content, remove HTML tags
    const content = match[0].replace(/<[^>]*>/g, '').replace(/\n+/g, ' ').trim();
    const lines = content.split('\n').filter(line => line.trim() && !line.includes(sectionTitle));
    return lines.length > 0 ? lines : [content.replace(sectionTitle, '').trim()];
  }

  generatePitchDeckHtml(data: PitchDeckData): string {
    const score = this.parseFeedbackScore(data.validationData.feedback);
    const uniqueValue = this.extractFeedbackSection(data.validationData.feedback, "What Makes This Special");
    const marketReality = this.extractFeedbackSection(data.validationData.feedback, "Market Reality Check");

    return `
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <title>${data.validationData.idea} - Pitch Deck</title>
        <style>
            body { 
                font-family: Arial, sans-serif; 
                margin: 0; 
                padding: 40px; 
                line-height: 1.6;
                color: #333;
                font-size: 14px;
            }
            .slide { 
                page-break-after: always; 
                min-height: 90vh; 
                padding: 40px;
                box-sizing: border-box;
            }
            .slide:last-child { page-break-after: avoid; }
            h1 { 
                font-size: 2.5em; 
                color: #1a56db; 
                margin-bottom: 20px;
                border-bottom: 3px solid #1a56db;
                padding-bottom: 10px;
            }
            h2 { 
                font-size: 2em; 
                color: #1a56db; 
                margin-bottom: 15px; 
            }
            h3 { 
                font-size: 1.4em; 
                color: #4f46e5; 
                margin-bottom: 10px; 
            }
            .score { 
                font-size: 3em; 
                color: #16a34a; 
                font-weight: bold; 
                text-align: center; 
                margin: 20px 0; 
            }
            .highlight { 
                background: #f0f9ff; 
                border-left: 4px solid #0284c7;
                color: #0c4a6e; 
                padding: 20px; 
                margin: 20px 0; 
            }
            ul { 
                padding-left: 30px; 
            }
            li { 
                margin-bottom: 8px; 
            }
            .customer-card { 
                border: 2px solid #e5e7eb; 
                padding: 15px; 
                margin: 15px 0; 
                background: #f9fafb; 
            }
            .center { text-align: center; }
            .subtitle { 
                font-size: 1.2em; 
                color: #6b7280; 
                margin-bottom: 30px; 
            }
        </style>
    </head>
    <body>
        <!-- Cover Slide -->
        <div class="slide">
            <div class="center">
                <h1>${data.validationData.idea}</h1>
                <p class="subtitle">Startup Pitch Deck</p>
                <div class="highlight">
                    <p><strong>Target Customer:</strong> ${data.validationData.targetCustomer}</p>
                    <p><strong>Problem Solved:</strong> ${data.validationData.problemSolved}</p>
                </div>
                <p style="color: #9ca3af; margin-top: 40px;">Generated by ValidatorAI</p>
            </div>
        </div>

        <!-- Problem Slide -->
        <div class="slide">
            <h1>The Problem</h1>
            <div class="highlight">
                <h3>Core Issue:</h3>
                <p>${data.validationData.problemSolved}</p>
            </div>
            ${marketReality.length > 0 ? `
            <h3>Market Context:</h3>
            <ul>
                ${marketReality.map(insight => `<li>${insight}</li>`).join('')}
            </ul>
            ` : ''}
        </div>

        <!-- Solution Slide -->
        <div class="slide">
            <h1>Our Solution</h1>
            <div class="highlight">
                <p>${data.validationData.idea}</p>
            </div>
            ${uniqueValue.length > 0 ? `
            <h3>What Makes Us Special:</h3>
            <ul>
                ${uniqueValue.map(value => `<li>${value}</li>`).join('')}
            </ul>
            ` : ''}
        </div>

        <!-- Market Validation -->
        <div class="slide">
            <h1>Market Validation</h1>
            <div class="center">
                <div class="score">${score}/100</div>
                <p class="subtitle">Validation Score</p>
            </div>
            <p>Our comprehensive validation shows strong market fit and customer demand.</p>
        </div>

        <!-- Customer Research -->
        <div class="slide">
            <h1>Customer Research</h1>
            <p class="subtitle">Interviewed ${data.customerInsights.length} Target Customers:</p>
            ${data.customerInsights.map(insight => `
            <div class="customer-card">
                <h3>${insight.persona.name} - ${insight.persona.role}</h3>
                <p><strong>Background:</strong> ${insight.persona.background}</p>
                <p><strong>Pain Points:</strong> ${insight.persona.painPoints.join(', ')}</p>
                <p><strong>Price Willingness:</strong> ${insight.persona.priceWillingness}</p>
            </div>
            `).join('')}
        </div>

        <!-- Business Model -->
        ${data.simulationData && data.simulationData.length > 0 ? `
        <div class="slide">
            <h1>Business Model & Traction</h1>
            <h3>6-Month Projection:</h3>
            <div class="highlight">
                <p><strong>Projected Users:</strong> ${data.simulationData[data.simulationData.length - 1].users?.toLocaleString()} users by Month 6</p>
            </div>
            <h3>Key Milestones:</h3>
            <ul>
                ${data.simulationData.slice(0, 3).filter(month => month.wins && month.wins.length > 0).map(month => 
                    `<li>Month ${month.month}: ${month.wins[0]}</li>`
                ).join('')}
            </ul>
        </div>
        ` : ''}

        <!-- Thank You -->
        <div class="slide">
            <div class="center">
                <h1>Thank You</h1>
                <p class="subtitle">Ready to validate your startup idea?</p>
                <div class="highlight">
                    <p>Visit ValidatorAI.com for free idea validation</p>
                </div>
            </div>
        </div>
    </body>
    </html>
    `;
  }

  generateBusinessReportHtml(data: PitchDeckData): string {
    const score = this.parseFeedbackScore(data.validationData.feedback);

    return `
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <title>${data.validationData.idea} - Business Report</title>
        <style>
            body { 
                font-family: Arial, sans-serif; 
                margin: 0; 
                padding: 40px; 
                line-height: 1.8;
                color: #374151;
                font-size: 12px;
            }
            .page { 
                page-break-after: always; 
                min-height: 90vh; 
                padding: 30px;
            }
            .page:last-child { page-break-after: avoid; }
            h1 { 
                font-size: 2.2em; 
                color: #1f2937; 
                margin-bottom: 25px;
                border-bottom: 2px solid #3b82f6;
                padding-bottom: 15px;
            }
            h2 { 
                font-size: 1.8em; 
                color: #374151; 
                margin: 30px 0 20px 0; 
            }
            h3 { 
                font-size: 1.3em; 
                color: #4b5563; 
                margin: 20px 0 15px 0; 
            }
            .summary-box { 
                background: #f3f4f6; 
                border-left: 4px solid #3b82f6; 
                padding: 25px; 
                margin: 25px 0; 
            }
            .customer-detail { 
                background: #fafafa; 
                border: 1px solid #e5e7eb; 
                padding: 20px; 
                margin: 20px 0; 
            }
            .score-display { 
                text-align: center; 
                font-size: 2.5em; 
                color: #059669; 
                font-weight: bold; 
                margin: 20px 0; 
            }
            ul { padding-left: 25px; }
            li { margin-bottom: 8px; }
        </style>
    </head>
    <body>
        <!-- Title Page -->
        <div class="page">
            <div style="text-align: center; margin-bottom: 40px;">
                <h1>Startup Validation Report</h1>
                <h2>${data.validationData.idea}</h2>
                <p style="color: #6b7280; font-size: 1.1em;">Comprehensive Business Analysis</p>
            </div>
            
            <div class="summary-box">
                <h3>Executive Summary</h3>
                <p><strong>Business Concept:</strong> ${data.validationData.idea}</p>
                <p><strong>Target Market:</strong> ${data.validationData.targetCustomer}</p>
                <p><strong>Problem Addressed:</strong> ${data.validationData.problemSolved}</p>
                <div class="score-display">${score}/100</div>
                <p style="text-align: center;"><em>Validation Score</em></p>
            </div>
        </div>

        <!-- Customer Research -->
        <div class="page">
            <h1>Customer Research Findings</h1>
            <p>We conducted interviews with ${data.customerInsights.length} target customers to validate assumptions and gather insights.</p>
            
            ${data.customerInsights.map((insight, index) => `
            <div class="customer-detail">
                <h3>Customer Profile ${index + 1}: ${insight.persona.name}</h3>
                <p><strong>Role:</strong> ${insight.persona.role}</p>
                <p><strong>Background:</strong> ${insight.persona.background}</p>
                
                <h4>Key Pain Points:</h4>
                <ul>
                    ${insight.persona.painPoints.map(pain => `<li>${pain}</li>`).join('')}
                </ul>
                
                <p><strong>Price Sensitivity:</strong> ${insight.persona.priceWillingness}</p>
                
                ${insight.conversations && insight.conversations.length > 0 ? `
                <h4>Interview Highlights:</h4>
                ${insight.conversations.map(conv => `
                <p><strong>Q:</strong> ${conv.question}</p>
                <p><strong>A:</strong> ${conv.response}</p>
                `).join('')}
                ` : ''}
            </div>
            `).join('')}
        </div>

        <!-- Simulation Results -->
        ${data.simulationData && data.simulationData.length > 0 ? `
        <div class="page">
            <h1>6-Month Business Simulation</h1>
            <p>Based on customer research and market analysis, here's a detailed projection:</p>
            
            ${data.simulationData.map(month => `
            <div style="border-left: 3px solid #10b981; padding-left: 20px; margin: 25px 0;">
                <h3>Month ${month.month}: ${month.title}</h3>
                <p><strong>Projected Users:</strong> ${month.users?.toLocaleString()}</p>
                
                ${month.wins && month.wins.length > 0 ? `
                <h4>Key Wins:</h4>
                <ul>
                    ${month.wins.map(win => `<li>${win}</li>`).join('')}
                </ul>
                ` : ''}
                
                ${month.challenges && month.challenges.length > 0 ? `
                <h4>Challenges:</h4>
                <ul>
                    ${month.challenges.map(challenge => `<li>${challenge}</li>`).join('')}
                </ul>
                ` : ''}
            </div>
            `).join('')}
        </div>
        ` : ''}

        <!-- Recommendations -->
        <div class="page">
            <h1>Recommendations & Next Steps</h1>
            
            <div class="summary-box">
                <h3>Key Recommendations</h3>
                <p>Based on comprehensive analysis, we recommend proceeding with this concept while focusing on:</p>
                
                <ul>
                    <li>Customer validation through continued interviews</li>
                    <li>MVP development focusing on core pain points</li>
                    <li>Pricing strategy validation with target segments</li>
                    <li>Market positioning to differentiate from competitors</li>
                </ul>
            </div>
            
            <p style="margin-top: 40px; text-align: center; color: #6b7280;">
                <em>Generated through ValidatorAI's startup validation platform.</em>
            </p>
        </div>
    </body>
    </html>
    `;
  }

  async generatePitchDeck(data: PitchDeckData): Promise<Buffer> {
    const htmlPdf = await import('html-pdf-node');
    const html = this.generatePitchDeckHtml(data);
    const options = { 
      format: 'A4',
      margin: { top: '1cm', right: '1cm', bottom: '1cm', left: '1cm' },
      printBackground: true
    };
    
    const file = { content: html };
    const pdfBuffer = await htmlPdf.generatePdf(file, options);
    return pdfBuffer;
  }

  async generateBusinessReport(data: PitchDeckData): Promise<Buffer> {
    const htmlPdf = await import('html-pdf-node');
    const html = this.generateBusinessReportHtml(data);
    const options = { 
      format: 'A4',
      margin: { top: '1.5cm', right: '2cm', bottom: '1.5cm', left: '2cm' },
      printBackground: true
    };
    
    const file = { content: html };
    const pdfBuffer = await htmlPdf.generatePdf(file, options);
    return pdfBuffer;
  }
}